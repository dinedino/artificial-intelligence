from sys import maxsize
from itertools import permutations
V = 4

def travellingSalesmanProblem(graph, s):
	vertex = []
	for i in range(V):
		if i != s:
			vertex.append(i)

	min_path = maxsize
	next_permutation=permutations(vertex)
	for i in next_permutation:
		current_pathweight = 0
		k = s
		for j in i:
			current_pathweight += graph[k][j]
			k = j
		current_pathweight += graph[k][s]
		min_path = min(min_path, current_pathweight)

	return min_path

if __name__ == "__main__":
	graph = [[0, 16, 11, 6], [8, 0, 13, 16],
			[4, 7, 0, 9], [5, 12, 2, 0]]
	s = 0
	print('The minimum cost is:',travellingSalesmanProblem(graph, s))
  
